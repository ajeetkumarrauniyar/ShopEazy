generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkId     String   @unique // Clerk user ID
  email       String   @unique
  password    String
  firstName   String?
  lastName    String?
  phoneNumber String?  @unique
  gstinNumber String?  // GST identification number
  businessName String?
  businessAddress String?
  stateCode   String?  // For GST state code
  
  // Sync tracking
  lastSyncAt  DateTime?
  isActive    Boolean  @default(true)
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()

  salesInvoices    Invoice[]  @relation("SalesInvoices")
  purchaseInvoices Invoice[]  @relation("PurchaseInvoices")
  syncLogs         SyncLog[]
}

model ItemMaster {
  id              String    @id @default(cuid())
  itemCode        String    @unique
  itemName        String
  description     String?
  hsnCode         String    // HSN Code
  unit            String    // e.g., PCS, KG, MTR
  cgstPercentage  Decimal   @db.Decimal(5, 2)
  sgstPercentage  Decimal   @db.Decimal(5, 2)
  igstPercentage  Decimal   @db.Decimal(5, 2)
  
  // Price Information
  purchasePrice   Decimal   @db.Decimal(10, 2)
  sellingPrice    Decimal   @db.Decimal(10, 2)
  
  // Inventory tracking
  currentStock    Int       @default(0)
  minimumStock    Int       @default(0)
  
  // Sync fields
  localId         String?   // Local WatermelonDB ID
  lastModified    BigInt    @default(0) // Timestamp for sync
  isDeleted       Boolean   @default(false)
  version         Int       @default(1) // For conflict resolution
  
  // Timestamps
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt()

  // Relations
  invoiceItems    InvoiceItem[]
}

model Invoice {
  id                String    @id @default(cuid())
  invoiceNumber     String    @unique
  invoiceType       InvoiceType @default(SALES)
  invoiceDate       DateTime  @default(now())
  dueDate           DateTime?
  status            InvoiceStatus @default(PENDING)
  
  // Party Details
  partyName         String
  partyGstin        String?
  billingAddress    String
  shippingAddress   String?
  partyState        String
  stateCode         String    // State code for GST
  
  // Amount Details
  subTotal          Decimal   @db.Decimal(10, 2)
  freightCharges    Decimal?   @db.Decimal(10, 2) @default(0)
  
  // GST Details
  cgstAmount        Decimal?   @db.Decimal(10, 2) @default(0)
  sgstAmount        Decimal?   @db.Decimal(10, 2) @default(0)
  igstAmount        Decimal?   @db.Decimal(10, 2) @default(0)
  totalGstAmount    Decimal?  @db.Decimal(10, 2) @default(0)
  
  roundOff          Decimal   @db.Decimal(10, 2) @default(0)
  totalAmount       Decimal   @db.Decimal(10, 2)
  
  // Additional Details
  purchaseOrderNo   String?
  purchaseOrderDate DateTime?
  deliveryChallanNo String?
  transporterName   String?
  vehicleNumber     String?
  eWayBillNo        String?
  
  // Payment Details
  paymentTerms      String?
  paymentMode       PaymentMode @default(CASH)
  paymentStatus     PaymentStatus @default(PENDING)
  
  // Additional Fields
  notes             String?
  termsAndConditions String?
  
  // Sync fields for offline-first
  localId           String?   // Local WatermelonDB ID
  lastModified      BigInt    @default(0) // Timestamp for sync
  isDeleted         Boolean   @default(false)
  isSynced          Boolean   @default(false)
  syncStatus        SyncStatus @default(PENDING)
  version           Int       @default(1) // For conflict resolution
  
  // Timestamps
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt()
  
  // Relations
  seller            User?     @relation("SalesInvoices", fields: [sellerId], references: [id])
  sellerId          String?
  buyer             User?     @relation("PurchaseInvoices", fields: [buyerId], references: [id])
  buyerId           String?
  items             InvoiceItem[]
}

model InvoiceItem {
  id              String    @id @default(cuid())
  serialNumber    Int       // Serial number in invoice
  
  // Item Details from Master
  item            ItemMaster @relation(fields: [itemId], references: [id])
  itemId          String
  
  // Transaction Details
  quantity        Decimal   @db.Decimal(10, 3)
  unit            String    // Unit of measurement
  unitPrice       Decimal   @db.Decimal(10, 2)
  discountPercent Decimal?   @db.Decimal(5, 2) @default(0)
  discountAmount  Decimal?   @db.Decimal(10, 2) @default(0)
  amount          Decimal   @db.Decimal(10, 2)
  
  // GST Details
  hsnCode         String
  cgstPercentage  Decimal   @db.Decimal(5, 2)
  cgstAmount      Decimal   @db.Decimal(10, 2)
  sgstPercentage  Decimal   @db.Decimal(5, 2)
  sgstAmount      Decimal   @db.Decimal(10, 2)
  igstPercentage  Decimal   @db.Decimal(5, 2)
  igstAmount      Decimal   @db.Decimal(10, 2)
  
  // Sync fields
  localId         String?   // Local WatermelonDB ID
  lastModified    BigInt    @default(0)
  isDeleted       Boolean   @default(false)
  version         Int       @default(1)
  
  // Relations
  Invoice         Invoice   @relation(fields: [invoiceId], references: [id])
  invoiceId       String
}

// Sync tracking table for monitoring sync operations
model SyncLog {
  id          String     @id @default(cuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  
  entityType  SyncEntityType
  entityId    String
  operation   SyncOperation
  status      SyncStatus
  error       String?
  conflictData Json?     // Store conflict data for resolution
  
  lastSyncAt  DateTime  @default(now())
  retryCount  Int       @default(0)
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
  
  @@index([userId, entityType, status])
}

// Configuration for MARG export formats
model MargExportConfig {
  id          String    @id @default(cuid())
  userId      String    @unique
  
  // MARG-specific configurations
  margClientCode String?
  exportFormat   String @default("CSV") // CSV, XML, JSON
  
  // Field mappings for MARG compatibility
  fieldMappings  Json
  
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt()
}

enum InvoiceType {
  SALES
  PURCHASE
}

enum InvoiceStatus {
  DRAFT
  PENDING
  COMPLETED
  CANCELLED
  OVERDUE
}

enum PaymentMode {
  CASH
  CHEQUE
  BANK_TRANSFER
  UPI
  CREDIT_CARD
  DEBIT_CARD
}

enum PaymentStatus {
  PENDING
  PARTIAL
  COMPLETED
  REFUNDED
}

enum SyncStatus {
  PENDING
  SUCCESS
  ERROR
  CONFLICT
}

enum SyncOperation {
  CREATE
  UPDATE
  DELETE
}

enum SyncEntityType {
  INVOICE
  INVOICE_ITEM
  ITEM_MASTER
  USER
}
